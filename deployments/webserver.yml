#file: noinspection SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection,SpellCheckingInspection
# kubernetes deployment for flask app
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app
        image: squidtoon99/vs-flask:1.0
        imagePullPolicy: Always # Always pull the latest while debugging
        env:
          - name: "GOOGLE_APPLICATION_CREDENTIALS"
            value: "/var/run/secret/cloud.google.com/service-account.json"
        envFrom:
        - secretRef:
            name: creds
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "75m"
        ports:
        - containerPort: 5000
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 5
        startupProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 5
          failureThreshold: 30
        volumeMounts:
          - name: service-account
            mountPath: /var/run/secret/cloud.google.com
            readOnly: true

      imagePullSecrets:
      - name: regcred
      serviceAccountName: flask-access
      volumes:
        - name: service-account
          secret:
            secretName: sa-private-key
---
apiVersion: v1
kind: Service
metadata:
  name: flask-app
spec:
  selector:
    app: flask-app
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: flask-app
spec:
  entryPoints:
    - web
  routes:
  - kind: Rule
    match: PathPrefix(`/app`) || PathPrefix(`/api`) || PathPrefix(`/static`) || PathPrefix(`/login`)
    priority: 1
    services:
    - name: flask-app
      port: 5000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flask-access
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: flask-access
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
  # Allow the service account to get, list, watch, and update pods, services, and deployments
  - apiGroups:
      - ""
      - apps
      - extensions
      - networking.k8s.io
      - traefik.containo.us
    resources: 
      - pods
      - services
      - deployments
      - ingressroutes
      - middlewares
      - persistentvolumeclaims
      - statefulsets
    verbs:
      - get
      - list
      - watch
      - update
      - patch
      - create
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: flask-access-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: flask-access
subjects:
- kind: ServiceAccount
  name: flask-access
  namespace: default